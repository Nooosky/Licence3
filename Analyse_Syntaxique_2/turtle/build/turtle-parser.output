Terminals unused in grammar

   "name"


State 13 conflicts: 4 shift/reduce
State 20 conflicts: 4 shift/reduce
State 21 conflicts: 4 shift/reduce
State 22 conflicts: 4 shift/reduce
State 23 conflicts: 4 shift/reduce


Grammar

    0 $accept: unit $end

    1 unit: cmds

    2 cmds: cmd cmds
    3     | %empty

    4 cmd: "forward" expr

    5 expr_literal: "value"

    6 expr_primary: expr_literal

    7 expr: expr_primary
    8     | expr '+' expr
    9     | expr '-' expr
   10     | expr '*' expr
   11     | expr '/' expr
   12     | '-' expr
   13     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 13
')' (41) 13
'*' (42) 10
'+' (43) 8
'-' (45) 9 12
'/' (47) 11
error (256)
"value" (258) 5
"name" (259)
"forward" (260) 4


Nonterminals, with rules where they appear

$accept (12)
    on left: 0
unit (13)
    on left: 1, on right: 0
cmds (14)
    on left: 2 3, on right: 1 2
cmd (15)
    on left: 4, on right: 2
expr_literal (16)
    on left: 5, on right: 6
expr_primary (17)
    on left: 6, on right: 7
expr (18)
    on left: 7 8 9 10 11 12 13, on right: 4 8 9 10 11 12 13


State 0

    0 $accept: . unit $end

    "forward"  shift, and go to state 1

    $default  reduce using rule 3 (cmds)

    unit  go to state 2
    cmds  go to state 3
    cmd   go to state 4


State 1

    4 cmd: "forward" . expr

    "value"  shift, and go to state 5
    '-'      shift, and go to state 6
    '('      shift, and go to state 7

    expr_literal  go to state 8
    expr_primary  go to state 9
    expr          go to state 10


State 2

    0 $accept: unit . $end

    $end  shift, and go to state 11


State 3

    1 unit: cmds .

    $default  reduce using rule 1 (unit)


State 4

    2 cmds: cmd . cmds

    "forward"  shift, and go to state 1

    $default  reduce using rule 3 (cmds)

    cmds  go to state 12
    cmd   go to state 4


State 5

    5 expr_literal: "value" .

    $default  reduce using rule 5 (expr_literal)


State 6

   12 expr: '-' . expr

    "value"  shift, and go to state 5
    '-'      shift, and go to state 6
    '('      shift, and go to state 7

    expr_literal  go to state 8
    expr_primary  go to state 9
    expr          go to state 13


State 7

   13 expr: '(' . expr ')'

    "value"  shift, and go to state 5
    '-'      shift, and go to state 6
    '('      shift, and go to state 7

    expr_literal  go to state 8
    expr_primary  go to state 9
    expr          go to state 14


State 8

    6 expr_primary: expr_literal .

    $default  reduce using rule 6 (expr_primary)


State 9

    7 expr: expr_primary .

    $default  reduce using rule 7 (expr)


State 10

    4 cmd: "forward" expr .
    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr

    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '*'  shift, and go to state 17
    '/'  shift, and go to state 18

    $default  reduce using rule 4 (cmd)


State 11

    0 $accept: unit $end .

    $default  accept


State 12

    2 cmds: cmd cmds .

    $default  reduce using rule 2 (cmds)


State 13

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | '-' expr .

    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '*'  shift, and go to state 17
    '/'  shift, and go to state 18

    '+'       [reduce using rule 12 (expr)]
    '-'       [reduce using rule 12 (expr)]
    '*'       [reduce using rule 12 (expr)]
    '/'       [reduce using rule 12 (expr)]
    $default  reduce using rule 12 (expr)


State 14

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   13     | '(' expr . ')'

    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '*'  shift, and go to state 17
    '/'  shift, and go to state 18
    ')'  shift, and go to state 19


State 15

    8 expr: expr '+' . expr

    "value"  shift, and go to state 5
    '-'      shift, and go to state 6
    '('      shift, and go to state 7

    expr_literal  go to state 8
    expr_primary  go to state 9
    expr          go to state 20


State 16

    9 expr: expr '-' . expr

    "value"  shift, and go to state 5
    '-'      shift, and go to state 6
    '('      shift, and go to state 7

    expr_literal  go to state 8
    expr_primary  go to state 9
    expr          go to state 21


State 17

   10 expr: expr '*' . expr

    "value"  shift, and go to state 5
    '-'      shift, and go to state 6
    '('      shift, and go to state 7

    expr_literal  go to state 8
    expr_primary  go to state 9
    expr          go to state 22


State 18

   11 expr: expr '/' . expr

    "value"  shift, and go to state 5
    '-'      shift, and go to state 6
    '('      shift, and go to state 7

    expr_literal  go to state 8
    expr_primary  go to state 9
    expr          go to state 23


State 19

   13 expr: '(' expr ')' .

    $default  reduce using rule 13 (expr)


State 20

    8 expr: expr . '+' expr
    8     | expr '+' expr .
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr

    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '*'  shift, and go to state 17
    '/'  shift, and go to state 18

    '+'       [reduce using rule 8 (expr)]
    '-'       [reduce using rule 8 (expr)]
    '*'       [reduce using rule 8 (expr)]
    '/'       [reduce using rule 8 (expr)]
    $default  reduce using rule 8 (expr)


State 21

    8 expr: expr . '+' expr
    9     | expr . '-' expr
    9     | expr '-' expr .
   10     | expr . '*' expr
   11     | expr . '/' expr

    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '*'  shift, and go to state 17
    '/'  shift, and go to state 18

    '+'       [reduce using rule 9 (expr)]
    '-'       [reduce using rule 9 (expr)]
    '*'       [reduce using rule 9 (expr)]
    '/'       [reduce using rule 9 (expr)]
    $default  reduce using rule 9 (expr)


State 22

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   10     | expr '*' expr .
   11     | expr . '/' expr

    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '*'  shift, and go to state 17
    '/'  shift, and go to state 18

    '+'       [reduce using rule 10 (expr)]
    '-'       [reduce using rule 10 (expr)]
    '*'       [reduce using rule 10 (expr)]
    '/'       [reduce using rule 10 (expr)]
    $default  reduce using rule 10 (expr)


State 23

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   11     | expr '/' expr .

    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '*'  shift, and go to state 17
    '/'  shift, and go to state 18

    '+'       [reduce using rule 11 (expr)]
    '-'       [reduce using rule 11 (expr)]
    '*'       [reduce using rule 11 (expr)]
    '/'       [reduce using rule 11 (expr)]
    $default  reduce using rule 11 (expr)
